# Required libraries
import yfinance as yf
import pandas as pd
import requests
from bs4 import BeautifulSoup
import plotly.graph_objs as go

# -------- Question 1 & 3: Extract Tesla and GameStop Stock Data ----------
def get_stock_data(ticker):
    stock = yf.Ticker(ticker)
    return stock.history(period="max")

tesla_data = get_stock_data("TSLA")
gamestop_data = get_stock_data("GME")

# -------- Question 2 & 4: Extract Revenue Data via Web Scraping --------
def scrape_revenue_data(url):
    response = requests.get(url)
    soup = BeautifulSoup(response.text, "html.parser")
    
    # Find table data
    table = soup.find("table")
    rows = table.find_all("tr")
    
    # Parse into DataFrame
    data = []
    for row in rows[1:]:
        cols = row.find_all("td")
        if len(cols) >= 2:
            date = cols[0].text.strip()
            revenue = cols[1].text.strip().replace("$", "").replace(",", "")
            data.append([date, float(revenue) if revenue else None])
    
    df = pd.DataFrame(data, columns=["Date", "Revenue"])
    return df

# Example URLs (replace with valid URLs used in your lab)
tesla_revenue = scrape_revenue_data("https://www.macrotrends.net/stocks/charts/TSLA/tesla/revenue")
gamestop_revenue = scrape_revenue_data("https://www.macrotrends.net/stocks/charts/GME/gamestop/revenue")

# -------- Question 5: Tesla Dashboard (Stock vs Revenue) --------
def plot_dashboard(stock_data, revenue_data, title):
    fig = go.Figure()
    
    fig.add_trace(go.Scatter(x=stock_data.index, y=stock_data["Close"], name="Stock Price"))
    
    revenue_data["Date"] = pd.to_datetime(revenue_data["Date"])
    fig.add_trace(go.Scatter(x=revenue_data["Date"], y=revenue_data["Revenue"], name="Revenue", yaxis="y2"))

    fig.update_layout(
        title=title,
        xaxis_title="Date",
        yaxis=dict(title="Stock Price (Close)"),
        yaxis2=dict(title="Revenue ($)", overlaying="y", side="right")
    )

    fig.show()

plot_dashboard(tesla_data, tesla_revenue, "Tesla: Stock Price vs Revenue")
plot_dashboard(gamestop_data, gamestop_revenue, "GameStop: Stock Price vs Revenue")


